{"version":3,"sources":["TEMPLATE.js","App.js","index.js"],"names":["generateFromData","userName","email","phoneNumber","gitProfile","website","currentRole","introduction","companyName","jobTitle","stack","years","platforms","languagesAndFrameworks","keywords","langs","length","moment","format","App","useState","firstName","setFirstName","lastName","setLastName","setEmail","setPhoneNumber","setGitProfile","setWebsite","setCurrentRole","setIntroduction","setCompanyname","setJobTitle","setStack","setYears","setPlatforms","setLanguages","keywords1","setKeywords1","keywords2","setKeywords2","keywords3","setKeywords3","className","Header","as","block","Container","fluid","style","marginTop","display","gridTemplateColumns","Form","margin","textAlign","Field","value","onChange","e","target","type","placeholder","min","position","replace","split","wrap","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.320a6646.chunk.js","sourcesContent":["import moment from \"moment\";\n\nconst getLengthOfLanguages = (langs) => {\n  if (langs && langs.length) {\n    return langs.length;\n  }\n  return 0;\n};\n\nexport const generateFromData = (\n  userName,\n  email,\n  phoneNumber,\n  gitProfile,\n  website,\n  currentRole,\n  introduction,\n  companyName,\n  jobTitle,\n  stack,\n  years,\n  platforms,\n  languagesAndFrameworks,\n  keywords\n) => `\nDear ${companyName} Hiring Team,\n\nI am writing to you in response to the open ${jobTitle} role at ${companyName}.\n\nAs a seasoned ${currentRole} with ${\n  years ? years + \"+ years experience developing\" : \"extensive knowledge of\"\n} diverse ${stack} applications, my skill-set aligns very well with your needs for a new ${jobTitle}, and will allow me to make an immediate contribution to ${companyName}â€™s continued success.\n\nTo quickly introduce myself, ${introduction}\n\nMy technical stack includes ${\n  platforms ? \"cross-platform proficiency (\" + platforms + \"); \" : \"\"\n}fluency in ${getLengthOfLanguages(\n  languagesAndFrameworks\n)}+ programming languages/frameworks (including ${\n  languagesAndFrameworks ? languagesAndFrameworks[0] : \"\"\n},${languagesAndFrameworks ? languagesAndFrameworks[1] : \"\"},${\n  languagesAndFrameworks ? languagesAndFrameworks[2] : \"\"\n}, and${\n  languagesAndFrameworks ? languagesAndFrameworks[3] : \"\"\n}); and advanced knowledge of developer applications, patterns, and best practices (including ${\n  keywords ? keywords[0] : \"\"\n}, ${keywords ? keywords[1] : \"\"}, and ${keywords ? keywords[2] : \"\"}).\n\nAttached, you will find high-level summaries of my job duties, software applications, and education history in my resume. I can be reached anytime via my cell phone ${phoneNumber} or via email at ${email}. \n\nThank you for your time and consideration. I look forward to speaking with you about this opportunity.\n\nSincerely,\n\n${userName}\n\nEmail: ${email}\nPhone: ${phoneNumber}\nGitHub: github.com/${gitProfile}\nWebsite: ${website}\n\n${moment().format(\"MMMM Do, YYYY\")}\n`;\n","import React, { useState } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Container, Form, Header } from \"semantic-ui-react\";\nimport { generateFromData } from \"./TEMPLATE\";\n\nfunction App() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [gitProfile, setGitProfile] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n  const [currentRole, setCurrentRole] = useState(\"\");\n  const [introduction, setIntroduction] = useState(\"\");\n  const [companyName, setCompanyname] = useState(\"\");\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [stack, setStack] = useState(\"\");\n  const [years, setYears] = useState(\"\");\n  const [platforms, setPlatforms] = useState(\"\");\n  const [languagesAndFrameworks, setLanguages] = useState(\"\");\n  const [keywords1, setKeywords1] = useState(\"\");\n  const [keywords2, setKeywords2] = useState(\"\");\n  const [keywords3, setKeywords3] = useState(\"\");\n\n  return (\n    <div>\n      <div className=\"sticky\">\n        <Header as=\"h3\" block>\n          Cover Buddy\n        </Header>\n      </div>\n\n      <Container\n        className=\"App\"\n        fluid\n        style={{\n          marginTop: \"40px\",\n          display: \"grid\",\n          gridTemplateColumns: \"40% 60%\",\n        }}\n      >\n        <Form style={{ display: \"flex\", margin: \"20px\" }}>\n          <Container textAlign=\"left\">\n            <h2>Company Information</h2>\n            <Form.Field>\n              <label>Company Name</label>\n              <input\n                value={companyName}\n                onChange={(e) => setCompanyname(e.target.value)}\n                type=\"text\"\n                placeholder=\"Company Name\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Job Title</label>\n              <input\n                value={jobTitle}\n                onChange={(e) => setJobTitle(e.target.value)}\n                type=\"text\"\n                placeholder=\"Job Title\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tech Stack (Full-Stack, Front-End, Back-End, etc.)</label>\n              <input\n                value={stack}\n                onChange={(e) => setStack(e.target.value)}\n                type=\"text\"\n                placeholder=\"Tech Stack\"\n              />\n            </Form.Field>\n            <h2>Key Terms</h2>\n            <Form.Field>\n              <label>Key Term 1</label>\n              <input\n                value={keywords1}\n                onChange={(e) => setKeywords1(e.target.value)}\n                type=\"text\"\n                placeholder=\"Key Term 1\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Key Term 2</label>\n              <input\n                value={keywords2}\n                onChange={(e) => setKeywords2(e.target.value)}\n                type=\"text\"\n                placeholder=\"Key Term 2\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Key Term 3</label>\n              <input\n                value={keywords3}\n                onChange={(e) => setKeywords3(e.target.value)}\n                type=\"text\"\n                placeholder=\"Key Term 3\"\n              />\n            </Form.Field>\n            <h2>Personal Information</h2>\n            <Form.Field>\n              <label>First Name</label>\n              <input\n                value={firstName}\n                onChange={(e) => {\n                  setFirstName(e.target.value);\n                }}\n                type=\"text\"\n                placeholder=\"First Name\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Last Name</label>\n              <input\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n                type=\"text\"\n                placeholder=\"Last Name\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Email</label>\n              <input\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                type=\"email\"\n                placeholder=\"Email\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Phone Number</label>\n              <input\n                value={phoneNumber}\n                onChange={(e) => setPhoneNumber(e.target.value)}\n                type=\"tel\"\n                placeholder=\"(555)-555-5555\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Current Role</label>\n              <input\n                value={currentRole}\n                onChange={(e) => setCurrentRole(e.target.value)}\n                type=\"text\"\n                placeholder=\"Front End Engineer\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Github Username</label>\n              <input\n                value={gitProfile}\n                onChange={(e) => setGitProfile(e.target.value)}\n                type=\"text\"\n                placeholder=\"Github Username\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Website</label>\n              <input\n                value={website}\n                onChange={(e) => setWebsite(e.target.value)}\n                type=\"text\"\n                placeholder=\"Website Address\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Years In Industry (Leave Blank to Skip)</label>\n              <input\n                value={years}\n                onChange={(e) => setYears(e.target.value)}\n                type=\"number\"\n                min=\"0\"\n                placeholder=\"0\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Introduction</label>\n              <textarea\n                value={introduction}\n                onChange={(e) => setIntroduction(e.target.value)}\n                type=\"text\"\n                placeholder=\"Quickly introduce yourself in a few sentences...\"\n              />\n            </Form.Field>\n            <h2>Technical Information</h2>\n            <Form.Field>\n              <label>Platforms</label>\n              <textarea\n                value={platforms}\n                onChange={(e) => setPlatforms(e.target.value)}\n                type=\"text\"\n                placeholder=\"Windows, Mac, Linux\"\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Languages / Frameworks</label>\n              <textarea\n                value={languagesAndFrameworks}\n                onChange={(e) => setLanguages(e.target.value)}\n                type=\"text\"\n                placeholder=\"JavaScript, React, Express, SQL (4+ separated by comma)\"\n              />\n            </Form.Field>\n          </Container>\n        </Form>\n        <Container style={{ position: \"relative\" }}>\n          <textarea\n            className=\"cover-letter\"\n            style={{ margin: \"20px\" }}\n            value={generateFromData(\n              firstName + \" \" + lastName,\n              email,\n              phoneNumber,\n              gitProfile,\n              website,\n              currentRole,\n              introduction,\n              companyName,\n              jobTitle,\n              stack,\n              years,\n              platforms.replace(\"  \", \" \"),\n              languagesAndFrameworks.split(\",\"),\n              [keywords1, keywords2, keywords3]\n            )}\n            wrap=\"true\"\n            style={{ width: \"80%\", height: \"100%\" }}\n            onChange={() => {}}\n          />\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}